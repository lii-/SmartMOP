<?xml version="1.0" encoding="utf-8"?>
<Professionbuddy>
  <!--ATTENTION: READ BELOW BEFORE YOU START-->
  <!--Set Hearth to Dwarf area in Stormwind if Alliance or Org if horde-->
  <!--Adjust the profile settings especially your banker and farmer name -->
  <!--Smart farming REQUIRES WoW Data Store addon -->
  <!--if changes are made to settings after profile was running you might need to restart HB (press stop then start)-->
  <!--You must start HB while logged in your farmer-->
  <!--If you customize this profile (change profiles, AH buyout etc) remember to rename so it doesn't get overwritten when you update from svn-->
  <!--********** Credits **********-->
  <!--HighVoltz - Most of the coding-->
  <!--nate8282 - Update to MOP routes-->
  <!--Natfoth - Idea to use GoalText for zone change timer-->
  <!--lii - some good ideas (Highvoltz put this here, I'm not THAT egotistical)-->
  
  <!--TODO-->
  <!--tweak banker code for efficiency-->
  <!--save current zone/timer values for pauses, discard after a set amount of time-->
  <!--update node DB-->
  <!-- improve full bags handling on banker-->
  <SubRoutine SubRoutineName="Do Not Edit these settings directly!!, Use the 'Settings' Tab instead">
    <Settings DefaultValue="0" Type="UInt32" Name="FarmedZone" Summary="Do Not Edit" Category="Misc" Global="False" Hidden="True" />
	<Settings DefaultValue="true" Type="Boolean" Name="DoSwitch" Summary="Do Not Edit" Category="Misc" Global="False" Hidden="True" />
	<Settings DefaultValue="100" Type="Int32" Name="FarmersGold" Summary="Amount of gold on farmer" Category="Auction House" Global="False" Hidden="True" />
	<Settings DefaultValue="60" Type="Int32" Name="Pulse" Summary="Log pulse interval in seconds" Category="Misc" Global="False" Hidden="True" />
	
    <Settings DefaultValue="true" Type="Boolean" Name="The Jade Forest" Summary="Farm in The Jade Forest" Category="Pandaria Zones" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Kun-Lai Summit" Summary="Farm in Kun-Lai Summit" Category="Pandaria Zones" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Townlong Steppes" Summary="Farm in Townlong Steppes" Category="Pandaria Zones" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Dread Wastes" Summary="Farm in Dread Wastes" Category="Pandaria Zones" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Valley of the Four Winds" Summary="Farm in Valley of the Four Winds" Category="Pandaria Zones" Global="False" Hidden="False" />
    <Settings DefaultValue="false" Type="Boolean" Name="Krasarang Wilds" Summary="Farm in Krasarang Wilds" Category="Pandaria Zones" Global="False" Hidden="False" />
    <Settings DefaultValue="false" Type="Boolean" Name="Vale of Eternal Blossoms" Summary="Farm in Vale of Eternal Blossoms" Category="Pandaria Zones" Global="False" Hidden="False" />
	
	<Settings DefaultValue="98" Type="Int32" Name="StackThreshold" Summary="Number of stacks before we stop farming a particular item. 98 is a guild tab" Category="SmartFarm" Global="False" Hidden="False" />
	<Settings DefaultValue="10" Type="Int32" Name="RandomZoneThreshold" Summary="The standard deviation of stock required before we start using SmartFarm. Don't modify unless you know what you're doing" Category="SmartFarm" Global="False" Hidden="False" />
	<Settings DefaultValue="1" Type="Int32" Name="ExcludeThreshold" Summary="The number of completed stock items required before we start using SmartFarm. With all nodes enabled, 9 means we never use it" Category="SmartFarm" Global="False" Hidden="False" />
	<Settings DefaultValue="true" Type="Boolean" Name="SmartFarm" Summary="Set to true to activate SmartFarm. Farms herbs and ore based on stock" Category="SmartFarm" Global="False" Hidden="False" />
	<Settings DefaultValue="false" Type="Boolean" Name="VerboseLog" Summary="Set to true if you want to see SmartFarm thinking" Category="SmartFarm" Global="False" Hidden="False" />
	<Settings DefaultValue="false" Type="Boolean" Name="RefreshDataStore" Summary="Update DataStore DB" Category="SmartFarm" Global="False" Hidden="False" />
	<Settings DefaultValue="true" Type="Boolean" Name="Ghost Iron Ore" Summary="Take Ghost Iron Ore into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Trillium Ore" Summary="Take Trillium Ore into account when determining the next farm zone" Category="SmartFarm Nodes" Global="true" Hidden="True" />
    <Settings DefaultValue="true" Type="Boolean" Name="Rain Poppy" Summary="Take Rain Poppy into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
	<Settings DefaultValue="true" Type="Boolean" Name="Snow Lily" Summary="Take Snow Lily into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Green Tea Leaf" Summary="Take Green Tea Leaf into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Silkweed" Summary="Take Silkweed into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Fool's Cap" Summary="Take Fool's Cap into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="Desecrated Herb" Summary="Take Desecrated Herb into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="false" />
	<Settings DefaultValue="true" Type="Boolean" Name="Golden Lotus" Summary="Take Golden Lotus into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
	<Settings DefaultValue="true" Type="Boolean" Name="Kyparite Ore" Summary="Take Kyparite Ore into account when determining the next farm zone" Category="SmartFarm Nodes" Global="False" Hidden="False" />
	
	<Settings DefaultValue="" Type="String" Name="FarmerName" Summary="The Name of your Farmer" Category="Farmer" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="EmptyBagsNow" Summary="Set to true to empty bags now." Category="Farmer" Global="False" Hidden="False" />
	<Settings DefaultValue="true" Type="Boolean" Name="Repair In Cty" Summary="Set to true if you want farmer to repair in the city" Category="Farmer" Global="False" Hidden="False" />
	<Settings DefaultValue="true" Type="Boolean" Name="EnableZoneTimer" Summary="Set to true to leave zone after random amount of time spent there" Category="Farmer" Global="False" Hidden="False" />
    <Settings DefaultValue="30" Type="Int32" Name="MinMinutesPerZone" Summary="Minimum number of minutes to spend in a zone" Category="Farmer" Global="False" Hidden="False" />
    <Settings DefaultValue="45" Type="Int32" Name="MaxMinutesPerZone" Summary="Maximum number of minutes to spend in a zone" Category="Farmer" Global="False" Hidden="False" />
    <Settings DefaultValue="false" Type="Boolean" Name="RandomZones" Summary="Randomly choose next zone with current zone being excluded" Category="Farmer" Global="False" Hidden="False" />
    <Settings DefaultValue="false" Type="Boolean" Name="DepositInGbank" Summary="Deposits items in Gbank instead of mailing them to banker" Category="Farmer" Global="False" Hidden="False" />
	
	<Settings DefaultValue="" Type="String" Name="BankerName" Summary="The Name of your banker" Category="Banker" Global="False" Hidden="False" />
    <Settings DefaultValue="true" Type="Boolean" Name="SwitchToBanker" Summary="Set this to true if you want to switch to banker to AH items." Category="Banker" Global="False" Hidden="False" />
    <Settings DefaultValue="200" Type="Int32" Name="DepositAllButThisAmountInGBank" Summary="Deposits all gold except this amount." Category="Banker" Global="False" Hidden="False" />
    <Settings DefaultValue="false" Type="Boolean" Name="DepositGoldInGbank" Summary="Set to true if you want the banker to deposit gold in gbank" Category="Banker" Global="False" Hidden="False" />
	<Settings DefaultValue="false" Type="Boolean" Name="SwitchToBankerNow" Summary="Set to true to switch to banker now" Category="Banker" Global="False" Hidden="False" />
	<Settings DefaultValue="false" Type="Boolean" Name="GBankAfterAuctions" Summary="Banker deposits all leftover items after auctioning completes" Category="Banker" Global="False" Hidden="False" />
	<Settings DefaultValue="false" Type="Boolean" Name="EnableBankTimer" Summary="Set to true to switch to banker after random amount of time instead of after zone completion" Category="Banker" Global="False" Hidden="False" />
	<Settings DefaultValue="120" Type="Int32" Name="MinMinutesUntilBanker" Summary="Minimum number of minutes to wait to switch" Category="Banker" Global="False" Hidden="False" />
    <Settings DefaultValue="270" Type="Int32" Name="MaxMinutesUntilBanker" Summary="Maximum number of minutes to wait to switch" Category="Banker" Global="False" Hidden="False" />
    
    <Settings DefaultValue="Bots\ProfessionBuddy\Profiles\SmartMOP" Type="String" Name="ProfileFolderPath" Summary="This is the path to the base profile folder. Inside are subfolders named after the zones they contain profiles for." Category="Advanced" Global="True" Hidden="False" />
	<Settings DefaultValue="30" Type="Int32" Name="HearthCooldown" Summary="The cooldown on your hearthstone" Category="Advanced" Global="False" Hidden="False" />
	
    <Settings DefaultValue="true" Type="Boolean" Name="CancelAuctions" Summary="Set to true to cancel undercut auctions before posting on AH" Category="Auction House" Global="False" Hidden="False" />
    <Settings DefaultValue="100" Type="Int32" Name="Max Stack Number" Summary="Max number of stacks to post on the AH overall" Category="Auction House" Global="False" Hidden="False" />
	<Settings DefaultValue="10" Type="Int32" Name="StackAmount" Summary="The amount of stacks to sell of each item" Category="Auction House" Global="False" Hidden="False" />-->
  </SubRoutine>
  <If Condition="!Me.Name.Equals((string)Settings[&quot;FarmerName&quot;],StringComparison.InvariantCultureIgnoreCase) " IgnoreCanRun="True">
    <CustomAction Code="MessageBox.Show(&quot;Switch to your farmer before starting this multiprofile. Must restart HB&quot;);TreeRoot.Stop();" />
  </If>
  <CallSubRoutine SubRoutineName="Init" />
  <CallSubRoutine SubRoutineName="LoadProfile" />
  <!--Check if GB is current bot and only when farmer is logged on.-->
  <If Condition="OnFarmer &amp;&amp; SecondaryBot.Name != &quot;Gatherbuddy2&quot;" IgnoreCanRun="True">
    <CustomAction Code="SwitchToBot(&quot;Gatherbuddy2&quot;);" />
    <WaitAction Condition="SecondaryBot.Name == &quot;Gatherbuddy2&quot;" Timeout="20000" />
  </If>
  <While Condition="true" IgnoreCanRun="True">
	<If Condition="(bool)Settings[&quot;RefreshDataStore&quot;]" IgnoreCanRun="True">
		<CustomAction Code="Settings[&quot;RefreshDataStore&quot;] = false;" />
		<CallSubRoutine SubRoutineName="RefreshStore" />
		<CallSubRoutine SubRoutineName="SmartFarm" /> <!-- remove on release -->
	</If>
    <If Condition="OnFarmer == true" IgnoreCanRun="True">
      <CustomAction Code="if ((bool)Settings[&quot;EnableZoneTimer&quot;]  &amp;&amp; (ChatThrottleSW.ElapsedMilliseconds &gt;= (int)Settings[&quot;Pulse&quot;]*1000 || !ChatThrottleSW.IsRunning))&#xD;&#xA;{&#xD;&#xA;   MyLog(&quot;Switching zone in {0} minutes&quot;,&#xD;&#xA;         (int)(TimeToSpendInZone - DateTime.Now.Subtract(ZoneStartTime).TotalMinutes));&#xD;&#xA;}" />
	  <CustomAction Code="if ((bool)Settings[&quot;EnableBankTimer&quot;]  &amp;&amp; (ChatThrottleSW.ElapsedMilliseconds &gt;= (int)Settings[&quot;Pulse&quot;]*1000 || !ChatThrottleSW.IsRunning))&#xD;&#xA;{&#xD;&#xA;    MyLog(&quot;Switching to banker in {0} minutes&quot;,&#xD;&#xA;         (int)(TimeUntilBanker - DateTime.Now.Subtract(BankerStartTime).TotalMinutes));&#xD;&#xA;}" />
	  <CustomAction Code="if (((bool)Settings[&quot;EnableBankTimer&quot;] || (bool)Settings[&quot;EnableZoneTimer&quot;])  &amp;&amp; (ChatThrottleSW.ElapsedMilliseconds &gt;= (int)Settings[&quot;Pulse&quot;]*1000 || !ChatThrottleSW.IsRunning))&#xD;&#xA;{&#xD;&#xA;		ChatThrottleSW.Reset();&#xD;&#xA;  ChatThrottleSW.Start();&#xD;&#xA;}" />
	 
	  <If Condition="Me.FreeNormalBagSlots &lt;=4 &amp;&amp; Me.ZoneId != CityZoneID" IgnoreCanRun="False">
        <CustomAction Code="MyLog(&quot;Hearthing because I have only have {0} free bag slots&quot;,Me.FreeNormalBagSlots);" />
        <CallSubRoutine SubRoutineName="Hearth" />
      </If>
      <!--Check if bags are full and not in city. If true then hearth-->
      <If Condition="(bool)Settings[&quot;EmptyBagsNow&quot;] &amp;&amp; Me.ZoneId != CityZoneID" IgnoreCanRun="False">
        <CustomAction Code="MyLog(&quot;Hearthing because you forced me to&quot;);" />
        <CallSubRoutine SubRoutineName="Hearth" />
      </If>
	  <If Condition="(bool)Settings[&quot;SwitchToBankerNow&quot;] &amp;&amp; Me.ZoneId != CityZoneID" IgnoreCanRun="False">
		<CustomAction Code="MyLog(&quot;Hearthing because you forced me to&quot;);" />
		<CustomAction Code="Settings[&quot;EmptyBagsNow&quot;] = true;" />
		<CustomAction Code="Settings[&quot;DoSwitch&quot;] = true;" />
        <CallSubRoutine SubRoutineName="Hearth" />
	  </If>
	  <If Condition="(bool)Settings[&quot;EnableBankTimer&quot;] &amp;&amp; &#xD;&#xA;DateTime.Now.Subtract(BankerStartTime).TotalMinutes &gt;= TimeUntilBanker &amp;&amp; &#xD;&#xA;Me.ZoneId != CityZoneID &amp;&amp; (bool)Settings[&quot;SwitchToBanker&quot;]" IgnoreCanRun="True">
		<CustomAction Code="MyLog(&quot;Hearthing and switching to banker because {0} minutes has elapsed&quot;,TimeUntilBanker);" />
		<CustomAction Code="Settings[&quot;EmptyBagsNow&quot;] = true;" />
		<CustomAction Code="Settings[&quot;DoSwitch&quot;] = true;" />
        <CallSubRoutine SubRoutineName="Hearth" />
	  </If>
      <If Condition="((bool)Settings[&quot;EnableZoneTimer&quot;] &amp;&amp;&#xD;&#xA; DateTime.Now.Subtract(ZoneStartTime).TotalMinutes &gt;= TimeToSpendInZone) &amp;&amp; &#xD;&#xA;Me.ZoneId != CityZoneID" IgnoreCanRun="True">
		<CustomAction Code="MyLog(&quot;Hearthing because I was in zone for {0} minutes&quot;,TimeToSpendInZone);" />
		<CustomAction Code="Settings[&quot;EmptyBagsNow&quot;] = true;" />
		<CallSubRoutine SubRoutineName="Hearth" />
      </If>
      <!--Check if bags are full and not in city. If true then hearth-->
      <!--Check if we're in factions capital city. Stormwind = 1519. Org = 1637-->
      <If Condition="Me.ZoneId == CityZoneID" IgnoreCanRun="True">
        <!--On Farmer-->
        <If Condition="Me.FreeNormalBagSlots &lt;=15 || (bool)Settings[&quot;EmptyBagsNow&quot;] || (bool)Settings[&quot;SwitchToBankerNow&quot;]" IgnoreCanRun="True">
          <!--Save the amount of gold on farmer-->
          <CustomAction Code="Settings[&quot;FarmersGold&quot;] = (int)Me.Gold;" />
          <If Condition="(bool)Settings[&quot;DepositInGbank&quot;]" IgnoreCanRun="True">
            <CallSubRoutine SubRoutineName="StoreItemsInGbank" />
          </If>
          <If Condition="!(bool)Settings[&quot;DepositInGbank&quot;]" IgnoreCanRun="True">
            <CallSubRoutine SubRoutineName="MailItems" />
          </If>
		  <If Condition="!(bool)Settings[&quot;EnableBankTimer&quot;] &amp;&amp; (bool)Settings[&quot;SwitchToBanker&quot;]" IgnoreCanRun="True">
			<CustomAction Code="Settings[&quot;DoSwitch&quot;] = true;" />
		  </If>
          <!--Log on Banker-->
          <If Condition="((bool)Settings[&quot;SwitchToBanker&quot;] &amp;&amp; (bool)Settings[&quot;DoSwitch&quot;]) || (bool)Settings[&quot;SwitchToBankerNow&quot;]" IgnoreCanRun="True">
			<CustomAction Code="Settings[&quot;SwitchToBankerNow&quot;] = false;" />
            <CustomAction Code="MyLog(&quot;Switching to banker&quot;);&#xD;&#xA;" />
            <CustomAction Code="SwitchCharacter((string)Settings[&quot;BankerName&quot;],Realm,&quot;Combat Bot&quot;);" />
            <WaitAction Condition="!StyxWoW.IsInWorld" Timeout="20000" />
          </If>
          <If Condition="!(bool)Settings[&quot;SwitchToBanker&quot;] &amp;&amp; (bool)Settings[&quot;EmptyBagsNow&quot;]" IgnoreCanRun="True">
            <CustomAction Code="Settings[&quot;EmptyBagsNow&quot;] = false;" />
          </If>
        </If>
        <If Condition="HasNewMail" IgnoreCanRun="True">
          <GetMailAction GetMailType="AllItems" ItemID="" CheckNewMail="True" MinFreeBagSlots="2" AutoFindMailBox="True" Location="0, 0, 0" />
        </If>
        <!--Wait for Flying mount info to refresh-->
        <If Condition="Mount.FlyingMounts.Count == 0" IgnoreCanRun="True">
          <CustomAction Code="Err(&quot;Waiting for MountHelper to refresh !!&quot;);" />
          <WaitAction Condition="Mount.FlyingMounts.Count &gt; 0" Timeout="300000" />
        </If>
        <!--Repair and sell junk-->
        <If Condition="(bool)Settings[&quot;Repair In Cty&quot;]" IgnoreCanRun="True">
          <CallSubRoutine SubRoutineName="Repair" />
        </If>
        <!--Change FarmedZone to the next zone-->
		<If Condition="!(bool)Settings[&quot;SmartFarm&quot;]" IgnoreCanRun="True">
			<If Condition="!(bool)Settings[&quot;RandomZones&quot;]" IgnoreCanRun="True">
			  <CustomAction Code="uint a = FarmZoneIDs.FirstOrDefault(zone =&gt; zone &gt; (uint)Settings[&quot;FarmedZone&quot;]);&#xD;&#xA;Settings[&quot;FarmedZone&quot;] = a &gt; 0u? a: FarmZoneIDs[0];" />
			</If>
			<If Condition="(bool)Settings[&quot;RandomZones&quot;]" IgnoreCanRun="True">
			  <CustomAction Code="int nextZoneI = 0;&#xD;&#xA;if (FarmZoneIDs.Count &gt; 1) &#xD;&#xA;{&#xD;&#xA;  Random r = new Random();&#xD;&#xA;  int index = FarmZoneIDs.IndexOf((uint)Settings[&quot;FarmedZone&quot;]);&#xD;&#xA;  do&#xD;&#xA;  {&#xD;&#xA;    nextZoneI=r.Next(0, FarmZoneIDs.Count);&#xD;&#xA;  }&#xD;&#xA;  while ( nextZoneI== index);&#xD;&#xA;} &#xD;&#xA;Settings[&quot;FarmedZone&quot;] =  FarmZoneIDs[nextZoneI];" />
			</If>
		</If>
		<If Condition="(bool)Settings[&quot;SmartFarm&quot;]" IgnoreCanRun="True">
			<CallSubRoutine SubRoutineName="RefreshStore" />
			<CallSubRoutine SubRoutineName="SmartFarm" />
		</If>
        <CallSubRoutine SubRoutineName="LoadProfile" />
        <If Condition="(bool)Settings[&quot;EnableZoneTimer&quot;]" IgnoreCanRun="True">
          <CustomAction Code="TimeToSpendInZone = new Random().Next((int)Settings[&quot;MinMinutesPerZone&quot;],(int)Settings[&quot;MaxMinutesPerZone&quot;]);" />
          <CustomAction Code="MyLog(&quot;I will spend {0} minutes in this zone&quot;,TimeToSpendInZone);" />
          <CustomAction Code="ZoneStartTime = DateTime.Now;" />
        </If>
		<If Condition="(bool)Settings[&quot;EnableBankTimer&quot;] &amp;&amp; (bool)Settings[&quot;SwitchToBanker&quot;]" IgnoreCanRun="True">
          <CustomAction Code="MyLog(&quot;{0} minutes until I switch to banker&quot;,TimeUntilBanker);" />
        </If>
        <While Condition="Me.ZoneId == CityZoneID" IgnoreCanRun="True">
          <CallSubRoutine SubRoutineName="Use Portal" />
        </While>
      </If>
      <!--On Banker-->
    </If>
    <If Condition="OnFarmer == false" IgnoreCanRun="False">
      <If Condition="(bool)Settings[&quot;CancelAuctions&quot;]" IgnoreCanRun="True">
        <CancelAuctionAction UseCategory="False" ItemID="0" AutoFindAh="True" MinBuyout="0g0s0c" IgnoreStackSizeBelow="1" />
      </If>
      <!--Get all mail and put it on AH-->
      <If Condition="(bool)Settings[&quot;DepositInGbank&quot;]" IgnoreCanRun="True">
        <CallSubRoutine SubRoutineName="WithdrawItemsInGbank" />
        <CallSubRoutine SubRoutineName="SellOnAH" />
        <CallSubRoutine SubRoutineName="WithdrawItemsInGbank" />
      </If>
      <Declaration Code="bool StopGettingMail;" />
      <CustomAction Code=" StopGettingMail = false;" />
      <While Condition="(HasNewMail || MailCount&gt; 0) &amp;&amp; ! StopGettingMail" IgnoreCanRun="True">
        <Declaration Code="uint mailCount;" />
        <CustomAction Code="mailCount =  TotalItemsInBag();" />
        <GetMailAction GetMailType="AllItems" ItemID="" CheckNewMail="True" MinFreeBagSlots="0" AutoFindMailBox="True" Location="0, 0, 0" />
        <!--If we didn't get any items from mailbox then exit loop-->
        <CustomAction Code="if (TotalItemsInBag() == mailCount)  StopGettingMail = true;" />
        <If Condition="!StopGettingMail" IgnoreCanRun="True">
          <CallSubRoutine SubRoutineName="SellOnAH" />
        </If>
        <CustomAction Code="if (Me.NormalBagsFull)  StopGettingMail = true;" />
      </While>
	  
      <If Condition="(int)Settings[&quot;FarmersGold&quot;] &lt; 200 &amp;&amp; (int)Me.Gold &gt; 600" IgnoreCanRun="True">
        <CustomAction Code="MyLog(&quot;Mailing farmer gold because he/she has less than 200&quot;);" />
        <CallSubRoutine SubRoutineName="MailFarmerRepairGold" />
      </If>
      <If Condition="(bool)Settings[&quot;EmptyBagsNow&quot;]" IgnoreCanRun="True">
        <CustomAction Code="Settings[&quot;EmptyBagsNow&quot;] = false;" />
      </If>
      <If Condition="(bool)Settings[&quot;DepositGoldInGbank&quot;] &amp;&amp; (int)Me.Gold &gt; (int)Settings[&quot;DepositAllButThisAmountInGBank&quot;]" IgnoreCanRun="True">
        <CallSubRoutine SubRoutineName="DepositGoldInGbank" />
      </If>
	  <If Condition="(bool)Settings[&quot;GBankAfterAuctions&quot;]" IgnoreCanRun="True">
		<CallSubRoutine SubRoutineName="StoreItemsInGbank" />
	  </If>
      <CustomAction Code="MyLog(&quot;Switching back to farmer&quot;);" />
      <!--Log on Farmer-->
      <CustomAction Code="SwitchCharacter((string)Settings[&quot;FarmerName&quot;],Realm,&quot;Gatherbuddy2&quot;);" />
      <WaitAction Condition="!StyxWoW.IsInWorld" Timeout="20000" />
	  <CustomAction Code="BankerStartTime = DateTime.Now;" />
	  <If Condition="(bool)Settings[&quot;EnableBankTimer&quot;] &amp;&amp; (bool)Settings[&quot;SwitchToBanker&quot;]" IgnoreCanRun="True">
		<CustomAction Code="Settings[&quot;DoSwitch&quot;] = false;" />
		<CustomAction Code="TimeUntilBanker = new Random().Next((int)Settings[&quot;MinMinutesUntilBanker&quot;],(int)Settings[&quot;MaxMinutesUntilBanker&quot;]);" />
	  </If>
    </If>
  </While>
  <SubRoutine SubRoutineName="SmartFarm">
	<If Condition="(bool)Settings[&quot;RandomZones&quot;]" IgnoreCanRun="True">
		<CustomAction Code="int nextZoneI = 0;&#xD;&#xA;if (FarmZoneIDs.Count &gt; 1) &#xD;&#xA;{&#xD;&#xA;  Random r = new Random();&#xD;&#xA;  int index = FarmZoneIDs.IndexOf((uint)Settings[&quot;FarmedZone&quot;]);&#xD;&#xA;  do&#xD;&#xA;  {&#xD;&#xA;    nextZoneI=r.Next(0, FarmZoneIDs.Count);&#xD;&#xA;  }&#xD;&#xA;  while ( nextZoneI== index);&#xD;&#xA;} &#xD;&#xA;Settings[&quot;FarmedZone&quot;] =  FarmZoneIDs[nextZoneI];" />
	</If>
	<If Condition="!(bool)Settings[&quot;RandomZones&quot;]" IgnoreCanRun="True">
		<CustomAction Code="FarmItemIDs.Clear();" />
		 <!-- Ghost Iron Ore -->
		  <CustomAction Code="if ((bool)Settings[&quot;Ghost Iron Ore&quot;]) FarmItemIDs.Add(72092);" />
		  <!-- Kyparite Ore -->
		  <CustomAction Code="if ((bool)Settings[&quot;Kyparite Ore&quot;]) FarmItemIDs.Add(72093);" />
		  <!-- Trillium Ore -->
		  <CustomAction Code="if ((bool)Settings[&quot;Trillium Ore&quot;]) FarmItemIDs.Add(72094); FarmItemIDs.Add(72103);" />
		  <!-- Rain Poppy -->
		  <CustomAction Code="if ((bool)Settings[&quot;Rain Poppy&quot;]) FarmItemIDs.Add(72237);" />
		  <!-- Green Tea Leaf -->
		  <CustomAction Code="if ((bool)Settings[&quot;Green Tea Leaf&quot;]) FarmItemIDs.Add(72234);" />
		  <!-- Silkweed -->
		  <CustomAction Code="if ((bool)Settings[&quot;Silkweed&quot;]) FarmItemIDs.Add(72235);" />
		  <!-- Snow Lily -->
		  <CustomAction Code="if ((bool)Settings[&quot;Snow Lily&quot;]) FarmItemIDs.Add(79010);" />
		  <!-- Fool's Cap -->
		  <CustomAction Code="if ((bool)Settings[&quot;Fool's Cap&quot;]) FarmItemIDs.Add(79011);" />
		  <!-- Desecrated Herb -->
		  <CustomAction Code="if ((bool)Settings[&quot;Desecrated Herb&quot;]) FarmItemIDs.Add(89639);" />
		  <!-- Golden Lotus -->
		<CustomAction Code="if ((bool)Settings[&quot;Golden Lotus&quot;]) FarmItemIDs.Add(72238);" />
		<!-- Choose the next zone based on node frequency and stock percentages -->
		<CustomAction Code="SortedDictionary&lt;uint,float&gt; ZoneConfidence = new SortedDictionary&lt;uint,float&gt;();	int cnt=0;		foreach (var i in FarmZoneYields.Keys) {foreach (var j in FarmZoneYields[i].Keys) {var iValue = FarmZoneYields[i]; var jValue = FarmZoneYields[i][j];	foreach (var k in NeededStock.Keys) {if (j == k &amp;&amp; (bool)Settings[TranslateIDs[i]] &amp;&amp; jValue &gt; 0) {if (!ZoneConfidence.ContainsKey(i)) {ZoneConfidence.Add(i,0);}	cnt+=1;		float con = (float)((100-NeededStock[k])*2+(jValue/10));   ZoneConfidence[i] += con;	if ((bool)Settings[&quot;VerboseLog&quot;]) {SmLog(&quot;{0}: {1} ({2})&quot;,TranslateIDs[i],TranslateIDs[j],con);}}}}	if (ZoneConfidence.ContainsKey(i) &amp;&amp; (bool)Settings[&quot;VerboseLog&quot;]) {ZoneConfidence[i] /= cnt;		SmLog(&quot;{0}: {1}&quot;,TranslateIDs[i],ZoneConfidence[i]);	cnt=0;}}		 var final = ZoneConfidence.Where(i =&gt; i.Value == ZoneConfidence.Values.Max()).Select(i =&gt; i.Key).FirstOrDefault();		Settings[&quot;FarmedZone&quot;]=(uint)final;		SmLog(&quot;Chose {0} to farm next&quot;,TranslateIDs[final]);" />
	</If>
  </SubRoutine>
  <SubRoutine SubRoutineName="RefreshStore">
	<CustomAction Code="RefreshDataStore(); 	SmLog(&quot;Data Store Refreshed&quot;);" />
	<CustomAction Code="NeededStock.Clear(); 	Settings[&quot;RandomZones&quot;]=false;	List&lt;float&gt; STDCheckLoL = new List&lt;float&gt;(); float Average=0; int ExcludeCount=0;		foreach (var i in FarmZoneYields[6138].Keys) {float temp=(((float)InGBankCount(i)+(float)OnAhCount(i)+(float)InbagCount(i))/20/(int)Settings[&quot;StackThreshold&quot;])*100; 		if (i == 72238) {temp*=20;}		if (FarmItemIDs.Contains(i)) {STDCheckLoL.Add(temp); Average+=temp;}		if (temp &gt;= 100) {ExcludeCount+=1;}		if (temp &lt; 100 &amp;&amp; FarmItemIDs.Contains(i)) {NeededStock.Add(i,temp); 	if ((bool)Settings[&quot;VerboseLog&quot;]) {SmLog(&quot;Need {0}, have {1}% of stock&quot;,TranslateIDs[i],(int)temp);}}}				Average/=STDCheckLoL.Count; float std=0; for(var y=0; y &lt; STDCheckLoL.Count; y++) {STDCheckLoL[y] = (float)Math.Pow(STDCheckLoL[y]-Average,2);		std+=STDCheckLoL[y];}		std = (int)Math.Sqrt(std/STDCheckLoL.Count);		if (std &lt;= (int)Settings[&quot;RandomZoneThreshold&quot;] ||  ExcludeCount &lt; (int)Settings[&quot;ExcludeThreshold&quot;]) {SmLog(&quot;We need all the things. Selecting a random zone&quot;);		Settings[&quot;RandomZones&quot;]=true;}" />
  </SubRoutine>
  <SubRoutine SubRoutineName="MailItems">
    <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.SubType == WoWGameObjectType.Mailbox);" Timeout="20000" />
    <GetMailAction GetMailType="AllItems" ItemID="" CheckNewMail="True" MinFreeBagSlots="0" AutoFindMailBox="True" Location="0, 0, 0" />
    <MailItemAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" Mail="All" UseCategory="True" ItemID="" Amount="0" AutoFindMailBox="True" Location="0, 0, 0" />
    <MailItemAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" Mail="All" UseCategory="True" ItemID="" Amount="0" AutoFindMailBox="True" Location="0, 0, 0" />
  </SubRoutine>
  <SubRoutine SubRoutineName="StoreItemsInGbank">
	 <StackItemsAction />
    <If Condition="SecondaryBot.Name != &quot;Combat Bot&quot;" IgnoreCanRun="True">
      <CustomAction Code="SwitchToBot(&quot;Combat Bot&quot;);" />
      <WaitAction Condition="SecondaryBot.Name == &quot;Combat Bot&quot;" Timeout="20000" />
    </If>
    <CallSubRoutine SubRoutineName="MoveToGbank" />
-		  <!--Green Tea Leaf-->
	  <If Condition="InbagCount(72234) &gt; 1" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Green Tea Leaf to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72234" AutoFindBank="True" />
      </If>
      <!--Rain Poppy-->
      <If Condition="InbagCount(72237) &gt; 1" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Rain Poppy to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72237" AutoFindBank="True" />
      </If>
      <!--Silkweed-->
      <If Condition="InbagCount(72235) &gt; 1" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Silkweed to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72235" AutoFindBank="True" />
      </If>
      <!--Snow Lily-->
      <If Condition="InbagCount(79010) &gt; 1" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Snow Lily to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="79010" AutoFindBank="True" />
      </If>
      <!--Fool's Cap-->
      <If Condition="InbagCount(79011) &gt; 1" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Fool's Cap to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="79011" AutoFindBank="True" />
      </If>
      <!--Golden Lotus-->
      <If Condition="InbagCount(72238) &gt; 1" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Golden Lotus to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72238" AutoFindBank="True" />
      </If>
      <!--Black Trillium Ore-->
      <If Condition="InbagCount(72094) &gt; 1" IgnoreCanRun="True">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Black Trillium Ore to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72094" GuildTab="0" AutoFindBank="True" />
      </If>
      <!--White Trillium Ore-->
      <If Condition="InbagCount(72103) &gt; 1" IgnoreCanRun="True">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing White Trillium Ore to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72103" GuildTab="0" AutoFindBank="True" />
      </If>
      <!--Ghost Iron Ore-->
      <If Condition="InbagCount(72092) &gt; 1" IgnoreCanRun="True">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Ghost Iron Ore to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72092" GuildTab="0" AutoFindBank="True" />
      </If>
      <!--Kyparite-->
      <If Condition="InbagCount(72093) &gt; 1" IgnoreCanRun="True">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Depositing Kyparite to the guild bank.&quot;);" />
        <PutItemInBankAction Deposit="All" UseCategory="False" Bank="Guild" ItemID="72093" GuildTab="0" AutoFindBank="True" />
      </If>

    <If Condition="OnFarmer &amp;&amp; SecondaryBot.Name != &quot;Gatherbuddy2&quot;" IgnoreCanRun="True">
      <CustomAction Code="SwitchToBot(&quot;Gatherbuddy2&quot;);" />
      <WaitAction Condition="SecondaryBot.Name == &quot;Gatherbuddy2&quot;" Timeout="100" />
    </If>
  </SubRoutine>
  <SubRoutine SubRoutineName="WithdrawItemsInGbank">
    <CallSubRoutine SubRoutineName="MoveToGbank" />
		<!--Green Tea Leaf-->
      <If Condition="InbagCount(72234) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (72234) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Green Tea Leaf from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72234" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--Rain Poppy-->
      <If Condition="InbagCount(72237) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (72237) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Rain Poppy from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72237" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--Silkweed-->
      <If Condition="InbagCount(72235) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (72235) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Silkweed from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72235" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--Snow Lily-->
      <If Condition="InbagCount(79010) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (79010) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Snow Lily from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="79010" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--Fool's Cap-->
      <If Condition="InbagCount(79011) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (79011) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Fool's Cap from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="79011" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--Golden Lotus-->
      <If Condition="InbagCount(72238) &lt; (int)Settings[&quot;StackAmount&quot;] &amp;&amp; InGBankCount (72238) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Golden Lotus from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72238" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
	  <!--Black Trillium Ore-->
      <If Condition="InbagCount(72094) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (72094) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Black Trillium Ore from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72094" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--White Trillium Ore-->
      <If Condition="InbagCount(72103) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (72103) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing White Trillium Ore from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72103" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--Ghost Iron Ore-->
      <If Condition="InbagCount(72092) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (72092) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Ghost Iron Ore from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72092" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>
      <!--Kyparite-->
      <If Condition="InbagCount(72093) &lt; ((int)Settings[&quot;StackAmount&quot;])*20 &amp;&amp; InGBankCount (72093) &gt;= 1 &amp;&amp; !Me.NormalBagsFull" IgnoreCanRun="False">
        <CustomAction Code="Log (Colors.Crimson,&quot;AHBuddy: &quot;,Colors.BlanchedAlmond,&quot;Withdrawing Kyparite from the guild bank.&quot;);" />
        <GetItemfromBankAction Withdraw="Amount" Bank="Guild" GetItemfromBankType="SpecificItem" ItemID="72093" Amount="10" AutoFindBank="True" WithdrawAdditively="False" />
      </If>

  </SubRoutine>
  <SubRoutine SubRoutineName="Hearth">
	<!--If we have a hearthstone-->
	<If Condition="InbagCount(6948) &gt; 0" IgnoreCanRun="True">
		<CustomAction Code="CanHearth = Me.BagItems.FirstOrDefault(i =&gt; i.Entry == 6948).Cooldown == 0;" />
		<!--and it isn't on cooldown-->
		<If Condition="CanHearth">
			<!--dismount and use hearthstone-->
			<If Condition="!Me.IsCasting" IgnoreCanRun="True">
			  <CustomAction Code="Mount.Dismount();" />
			  <CustomAction Code="Lua.DoString(&quot;UseItemByName(6948)&quot;);" />
			  <WaitAction Condition="Me.IsCasting" Timeout="110" />
			</If>
			<CustomAction Code="RefreshDataStore();" />
			<WaitAction Condition="Me.ZoneId == CityZoneID" Timeout="100" />
		</If>
		<!--otherwise, wait out the cooldown-->
		<If Condition="!CanHearth">
			<CustomAction Code="MyLog(&quot;Hearthstone is on cooldown. Ignoring&quot;,0);"/>
			<If Condition="TimeToSpendInZone &lt;= (int)Settings[&quot;HearthCooldown&quot;]" IgnoreCanRun="True">
				<CustomAction Code="TimeToSpendInZone=(int)Settings[&quot;HearthCooldown&quot;];" />
				<CustomAction Code="MyLog(&quot;{0} more minutes until I switch zones&quot;, Settings[&quot;HearthCooldown&quot;]);"/>
			</If>
			<If Condition="TimeUntilBanker &lt;= (int)Settings[&quot;HearthCooldown&quot;]" IgnoreCanRun="True">
				<CustomAction Code="TimeUntilBanker=(int)Settings[&quot;HearthCooldown&quot;];" />
				<CustomAction Code="MyLog(&quot;{0} more minutes until I switch to banker&quot;, Settings[&quot;HearthCooldown&quot;]);"/>
			</If>
			<CustomAction Code="Settings[&quot;EmptyBagsNow&quot;] = false;" />
			<CustomAction Code="Settings[&quot;SwitchToBankerNow&quot;] = false;" />
		</If>
	</If>
	<!--if we don't have a hearthstone, ignore-->
	<If Condition="InbagCount(6948) == 0" IgnoreCanRun="True">
		<CustomAction Code="MyLog(&quot;Bags do not contain a Hearthstone.&quot;);" />
		<CustomAction Code="Settings[&quot;EmptyBagsNow&quot;] = false;" />
		<CustomAction Code="Settings[&quot;SwitchToBankerNow&quot;] = false;" />
	</If>
  </SubRoutine>
  <SubRoutine SubRoutineName="DepositGoldInGbank">
    <CallSubRoutine SubRoutineName="MoveToGbank" />
    <CustomAction Code="MyLog(&quot;Depositing all but {0} gold into GBank&quot;,Settings[&quot;DepositAllButThisAmountInGBank&quot;]);" />
    <InteractionAction InteractType="GameObject" Entry="0" InteractDelay="2000" GameObjectType="GuildBank" SpellFocus="Anvil" />
    <WaitAction Condition="false" Timeout="2000" />
    <!--Deposit gold in Gbank-->
    <CustomAction Code="Lua.DoString(&quot;local goldToKeep={0}*10000 local depositAmount=(GetMoney()-goldToKeep) if depositAmount &gt; 0 then DepositGuildBankMoney(depositAmount) end&quot;,Settings[&quot;DepositAllButThisAmountInGBank&quot;]);" />
  </SubRoutine>
  <SubRoutine SubRoutineName="MoveToGbank">
    <CustomAction Code="MyLog(&quot;Move to nearest GBank&quot;);" />
    <Declaration Code="List&lt;WoWPoint&gt; GBankLocations = new List&lt;WoWPoint&gt;();" />
    <Declaration Code="WoWPoint GbankLocation;" />
    <CustomAction Code="GBankLocations.Clear();" />
    <CustomAction Code="GbankLocation = WoWPoint.Zero;" />
    <If Condition="Me.MapId == 0" IgnoreCanRun="True">
      <!--Stormwind-->
      <If Condition="Me.ZoneId == 1519" IgnoreCanRun="True">
        <!--Stormwind 'Human' GuildBank-->
        <CustomAction Code="GBankLocations.Add(new WoWPoint(-8920.106, 621.256, 100.226));" />
        <!--Stormwind 'Dwarf' GuildBank-->
        <CustomAction Code="GBankLocations.Add(new WoWPoint(-8315.161, 582.8967, 100.3132));" />
      </If>
    </If>
    <If Condition="Me.MapId == 1" IgnoreCanRun="True">
      <!--Org-->
      <If Condition="Me.ZoneId == 1637" IgnoreCanRun="True">
        <!--Valley of Strength GuildBank-->
        <CustomAction Code="GBankLocations.Add(new WoWPoint(1533.167, -4362.145, 20.54772));" />
        <!--Valley of Honor GuildBank-->
        <CustomAction Code="GBankLocations.Add(new WoWPoint(1886.409, -4683.326, 38.5004));" />
        <!--Valley of Wisdom GuildBank-->
        <CustomAction Code="GBankLocations.Add(new WoWPoint(1951.516, -4216.525, 37.19798));" />
        <!--Goblin Slums GuildBank-->
        <CustomAction Code="GBankLocations.Add(new WoWPoint(1573.427, -4172.664, 51.74817));" />
      </If>
    </If>
    <!--Dalaran-->
    <If Condition="Me.ZoneId == 4395" IgnoreCanRun="True">
      <!--North GuildBank-->
      <CustomAction Code="GBankLocations.Add(new WoWPoint(5961.328, 616.5127, 650.6276));" />
      <!--Valley of Honor GuildBank-->
      <CustomAction Code="GBankLocations.Add(new WoWPoint(5651.325, 682.1651, 651.9932));" />
    </If>
    <If Condition="GBankLocations.Count== 0" IgnoreCanRun="True">
      <CustomAction Code="Log(Colors.Green,&quot;Multiprofile: &quot;,Colors.LightGreen,&quot;There is no gbank found in your area&quot;);" />
    </If>
    <If Condition="GBankLocations.Count &gt; 0" IgnoreCanRun="True">
      <CustomAction Code="GbankLocation  = GBankLocations.OrderBy( pnt =&gt; pnt.Distance(Me.Location)).FirstOrDefault();" />
      <While Condition="DistanceTo(GbankLocation) &gt; 5" IgnoreCanRun="True">
        <CustomAction Code="MoveTo(GbankLocation);" />
      </While>
    </If>
  </SubRoutine>
  <SubRoutine SubRoutineName="MailFarmerRepairGold">
    <While Condition="MailFrame.Instance == null || !MailFrame.Instance.IsVisible" IgnoreCanRun="True">
      <InteractionAction InteractType="GameObject" Entry="0" InteractDelay="0" GameObjectType="Mailbox" SpellFocus="Anvil" />
    </While>
    <WaitAction Condition="false" Timeout="2000" />
    <CustomAction Code=" MailFrame.Instance.SwitchToSendMailTab();" />
    <WaitAction Condition="false" Timeout="2000" />
    <CustomAction Code="Lua.DoString(&quot;local a={0} SetSendMailMoney(a*10000) SendMail(\&quot;{1}\&quot;,a..' gold attached','')&quot;,500-(int)Settings[&quot;FarmersGold&quot;],Settings[&quot;FarmerName&quot;]);" />
    <WaitAction Condition="false" Timeout="2000" />
  </SubRoutine>
  <SubRoutine SubRoutineName="UseNormalMountAsDruid">
    <While Condition="!Me.Mounted" IgnoreCanRun="True">
      <CustomAction Code="if (Me.IsMoving)&#xD;&#xA;   WoWMovement.MoveStop();&#xD;&#xA;if (Mount.FlyingMounts.Count &gt; 0)&#xD;&#xA;{&#xD;&#xA;  SpellManager.Cast(Mount.FlyingMounts.First().CreatureSpell);&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;   Err(&quot;You need to go learn a normal flying mount or do most quests here in Vashjir&quot;);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
      <WaitAction Condition="Me.Mounted" Timeout="4000" />
    </While>
  </SubRoutine>
  <SubRoutine SubRoutineName="SellOnAH">
	<!--Ghost Iron Ore-->
	<SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72092" MinBuyout="39g0s0c" MaxBuyout="100g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <!--Black Trillium Ore-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72094" MinBuyout="80g0s0c" MaxBuyout="120g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <!--WhiteTrillium Ore-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72103" MinBuyout="80g0s0c" MaxBuyout="120g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <!--Trillium Bar-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72095" MinBuyout="0g10s0c" MaxBuyout="100g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <!--Living Steel-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72104" MinBuyout="180g10s0c" MaxBuyout="350g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <!--Rain Poppy-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72237" MinBuyout="35g0s0c" MaxBuyout="60g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <!--Green Tea Leaf-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72234" MinBuyout="25g0s0c" MaxBuyout="50g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <!--Silkweed-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72235" MinBuyout="35g10s0c" MaxBuyout="80g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <!--Snow Lily-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="79010" MinBuyout="40g10s0c" MaxBuyout="80g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <!--Fool's Cap-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="79011" MinBuyout="75g10s0c" MaxBuyout="160g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
	<!--Desecrated Herb-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="89639" MinBuyout="50g10s0c" MaxBuyout="190g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <!--Golden Lotus-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72238" MinBuyout="35g10s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <!--Kyparite-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="72093" MinBuyout="35g10s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
	<!--Cooking Mats-->
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74847" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74839" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74834" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74838" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74833" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74844" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74846" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74842" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Everything" ItemID="74850" MinBuyout="1g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <!--Ironpaw Token Items-->
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="74849" MinBuyout="2g0s0c" MaxBuyout="7g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="74853" MinBuyout="150g0s0c" MaxBuyout="300g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="74863" MinBuyout="5g0s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <!--Gems-->
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76135" MinBuyout="0g90s0c" MaxBuyout="5g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76133" MinBuyout="0g90s0c" MaxBuyout="5g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76137" MinBuyout="0g90s0c" MaxBuyout="5g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76130" MinBuyout="0g90s0c" MaxBuyout="5g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76134" MinBuyout="0g90s0c" MaxBuyout="5g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76136" MinBuyout="0g90s0c" MaxBuyout="5g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76141" MinBuyout="15g90s0c" MaxBuyout="80g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76138" MinBuyout="15g90s0c" MaxBuyout="80g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76139" MinBuyout="15g90s0c" MaxBuyout="80g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76140" MinBuyout="15g90s0c" MaxBuyout="80g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76142" MinBuyout="15g90s0c" MaxBuyout="80g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="None" UseCategory="False" RunTime="_12_Hours" AmountType="Amount" ItemID="76131" MinBuyout="15g90s0c" MaxBuyout="80g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Meta" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="100g0s0c" MaxBuyout="500g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Blue" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Yellow" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Purple" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Green" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Orange" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Simple" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g70s0c" MaxBuyout="5g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Prismatic" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="1g0s0c" MaxBuyout="60g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="Gem" SubCategoryType="WoWItemGemClass" SubCategory="Red" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g60s0c" MaxBuyout="150g0s0c" StackSize="1" IgnoreStackSizeBelow="1" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="True" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Cloth" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="5g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="20" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Elemental" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="7g0s0c" StackSize="20" IgnoreStackSizeBelow="20" Amount="20" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="MetalStone" UseCategory="True" RunTime="_12_Hours" AmountType="Amount" ItemID="" MinBuyout="0g80s0c" MaxBuyout="30g0s0c" StackSize="20" IgnoreStackSizeBelow="1" Amount="20" BidPrecent="95" UndercutPrecent="0.3" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
    <SellItemOnAhAction Category="TradeGoods" SubCategoryType="WoWItemTradeGoodsClass" SubCategory="Herb" UseCategory="True" RunTime="_24_Hours" AmountType="Everything" ItemID="" MinBuyout="0g80s0c" MaxBuyout="8g0s0c" StackSize="20" IgnoreStackSizeBelow="20" Amount="10" BidPrecent="95" UndercutPrecent="0.1" AutoFindAh="True" PostIfBelowMinBuyout="False" Location="0, 0, 0" />
  </SubRoutine>
  <SubRoutine SubRoutineName="Init">
    <CustomAction Code="MyLog(&quot;Made by HighVoltz&quot;);" />
    <CustomAction Code="Log(Colors.GreenYellow,&quot;&quot;,Colors.GreenYellow,&quot;*************** Settings ****************&quot;);" />
    <CustomAction Code="MyLog(&quot;SwitchToBanker: {0}&quot;,Settings[&quot;SwitchToBanker&quot;]);" />
	<CustomAction Code="MyLog(&quot;EnableZoneTimer: {0}&quot;,Settings[&quot;EnableZoneTimer&quot;]);" />
    <CustomAction Code="MyLog(&quot;DepositGoldInGbank: {0}&quot;,Settings[&quot;DepositGoldInGbank&quot;]);" />
    <CustomAction Code="MyLog(&quot;MinMinutesPerZone: {0}&quot;,Settings[&quot;MinMinutesPerZone&quot;]);" />
    <CustomAction Code="MyLog(&quot;MaxMinutesPerZone: {0}&quot;,Settings[&quot;MaxMinutesPerZone&quot;]);" />
    <CustomAction Code="MyLog(&quot;RandomZones: {0}&quot;,Settings[&quot;RandomZones&quot;]);" />
    <CustomAction Code="MyLog(&quot;DepositInGbank: {0}&quot;,Settings[&quot;DepositInGbank&quot;]);" />
    <CustomAction Code="MyLog(&quot;CancelAuctions: {0}&quot;,Settings[&quot;CancelAuctions&quot;]);" />
    <CustomAction Code="MyLog(&quot;Max Stack Number: {0}&quot;,Settings[&quot;Max Stack Number&quot;]);" />
    <CustomAction Code="Log(Colors.GreenYellow,&quot;&quot;,Colors.GreenYellow,&quot;***************** Zones *****************&quot;);" />
    <CustomAction Code="MyLog(&quot;Dread Wastes: {0}&quot;,Settings[&quot;Dread Wastes&quot;]);" />
    <CustomAction Code="MyLog(&quot;Krasarang Wilds: {0}&quot;,Settings[&quot;Krasarang Wilds&quot;]);" />
    <CustomAction Code="MyLog(&quot;Kun-Lai Summit: {0}&quot;,Settings[&quot;Kun-Lai Summit&quot;]);" />
    <CustomAction Code="MyLog(&quot;The Jade Forest: {0}&quot;,Settings[&quot;The Jade Forest&quot;]);" />
    <CustomAction Code="MyLog(&quot;Townlong Steppes: {0}&quot;,Settings[&quot;Townlong Steppes&quot;]);" />
   <CustomAction Code="MyLog(&quot;Vale of Eternal Blossoms: {0}&quot;,Settings[&quot;Vale of Eternal Blossoms&quot;]);" />
    <CustomAction Code="MyLog(&quot;Valley of the Four Winds: {0}&quot;,Settings[&quot;Valley of the Four Winds&quot;]);" />
	<CustomAction Code="SmLog(&quot;Made by lii&quot;);" />
    <Declaration Code="string Realm;" />
    <Declaration Code="bool OnFarmer,CanHearth;" />
    <Declaration Code="int CityZoneID,TimeToSpendInZone,TimeUntilBanker;" />
    <Declaration Code="List&lt;uint&gt; FarmZoneIDs;"	/>
	<Declaration Code="List&lt;uint&gt; FarmItemIDs;" />
    <Declaration Code="DateTime ZoneStartTime;" />
	<Declaration Code="DateTime BankerStartTime;" />
    <Declaration Code="Stopwatch ChatThrottleSW = new Stopwatch();" />
	<!-- create dictionary of zones and their nodes according to zoneID and itemID. Based on data from WoWhead gatherer DB Feb 24, 2013 -->
	<!-- ex. FarmZoneYields[ZoneID][ItemID] will give the number of nodes in that zone for that item -->
	<!-- contains only herbs and ore -->
	<Declaration Code="static Dictionary&lt;uint, Dictionary&lt;uint,uint&gt;&gt; FarmZoneYields = new Dictionary&lt;uint, Dictionary&lt;uint,uint&gt;&gt; {{6138, new Dictionary&lt;uint,uint&gt; {{72092,339},{72094,14},{72093,95},{72103,14},{72237,0},{72234,59},{72235,0},{79010,0},{79011,174},{89639,172},{72238,0}}},{6134, new Dictionary&lt;uint,uint&gt; {{72092,161},{72094,0},{72103,0},{72237,0},{72234,95},{72235,92},{79010,0},{79011,0},{89639,0},{72238,1}}},{5841, new Dictionary&lt;uint,uint&gt; {{72092,389},{72094,62},{72103,62},{72237,0},{72234,187},{72235,0},{79010,289},{79011,0},{89639,34},{72238,4}}},{5785, new Dictionary&lt;uint,uint&gt; {{72092,822},{72094,8},{72103,8},{72237,222},{72234,629},{72235,6},{79010,0},{79011,10},{89639,12},{72238,12}}},{5842, new Dictionary&lt;uint,uint&gt; {{72092,282},{72094,19},{72093,74},{72103,19},{72237,0},{72234,98},{72235,0},{79010,0},{79011,62},{89639,0},{72238,1}}},{5840, new Dictionary&lt;uint,uint&gt; {{72092,52},{72094,39},{72103,39},{72237,5},{72234,17},{72235,0},{79010,0},{79011,0},{89639,0},{72238,0}}},{5805, new Dictionary&lt;uint,uint&gt; {{72092,448},{72094,0},{72103,0},{72237,0},{72234,385},{72235,227},{79010,0},{79011,0},{89639,19},{72238,1}}}};" />
    <Declaration Code="static Dictionary&lt;uint,string&gt; TranslateIDs = new Dictionary&lt;uint,string&gt; {{72092,&quot;Ghost Iron Ore&quot;},{72094,&quot;White Trillium Ore&quot;},{72103,&quot;Black Trillium Ore&quot;},{72093,&quot;Kyparite Ore&quot;},{72237,&quot;Rain Poppy&quot;},{72234,&quot;Green Tea Leaf&quot;},{72235,&quot;Silkweed&quot;},{79010,&quot;Snow Lily&quot;},{79011,&quot;Fool's Cap&quot;},{89639,&quot;Desecrated Herb&quot;},{72238,&quot;Golden Lotus&quot;},{6138,&quot;Dread Wastes&quot;},{6134,&quot;Krasarang Wilds&quot;},{5841,&quot;Kun-Lai Summit&quot;},{5785,&quot;The Jade Forest&quot;},{5842,&quot;Townlong Steppes&quot;},{5840,&quot;Vale of Eternal Blossoms&quot;},{5805,&quot;Valley of the Four Winds&quot;}};" />
	<Declaration Code="Dictionary&lt;uint,float&gt; NeededStock = new Dictionary&lt;uint,float&gt;();" />
    <!--store current server name, needed when switching characters.-->
    <CustomAction Code="Realm = Lua.GetReturnVal&lt;string&gt;(&quot;return GetRealmName()&quot;,0);" />
    <!--set to 'true' if on farmer, otherwise if on banker then it's set to false-->
    <CustomAction Code="OnFarmer = Lua.GetReturnVal&lt;string&gt;(&quot;return UnitName('player')&quot;,0).Equals((string)Settings[&quot;FarmerName&quot;],StringComparison.InvariantCultureIgnoreCase);" />
    <!--ZoneID of bots capital city-->
    <CustomAction Code="CityZoneID = Me.IsAlliance? 1519:1637;" />
    <!--List of zones IDs that we will farm in accending numerical order-->
    <CustomAction Code="FarmZoneIDs = new List&lt;uint&gt;();" />
	<CustomAction Code="FarmItemIDs = new List&lt;uint&gt;();" />
    <If Condition="OnFarmer" IgnoreCanRun="True">
      <!--Random Time-->
      <CustomAction Code="TimeToSpendInZone= new Random().Next((int)Settings[&quot;MinMinutesPerZone&quot;],(int)Settings[&quot;MaxMinutesPerZone&quot;]);" />
	  <CustomAction Code="ZoneStartTime = DateTime.Now;" />
	  <!--Double Random Time-->
	  <CustomAction Code="TimeUntilBanker= new Random().Next((int)Settings[&quot;MinMinutesUntilBanker&quot;],(int)Settings[&quot;MaxMinutesUntilBanker&quot;]);" />
	  <CustomAction Code="BankerStartTime = DateTime.Now;" />
	  <If Condition="(bool)Settings[&quot;EnableBankTimer&quot;] &amp;&amp; (bool)Settings[&quot;SwitchToBanker&quot;]" IgnoreCanRun="True">
		  <CustomAction Code="Settings[&quot;DoSwitch&quot;] = false;" />
	  </If>
	  <!-- Ghost Iron Ore -->
	  <CustomAction Code="if ((bool)Settings[&quot;Ghost Iron Ore&quot;]) FarmItemIDs.Add(72092);" />
	  <!-- Trillium Ore -->
	  <CustomAction Code="if ((bool)Settings[&quot;Trillium Ore&quot;]) FarmItemIDs.Add(72094); FarmItemIDs.Add(72103);" />
	  <!--Kyparite Ore-->
	  <CustomAction Code="if ((bool)Settings[&quot;Kyparite Ore&quot;]) FarmItemIDs.Add(72093);" />
	  <!-- Rain Poppy -->
	  <CustomAction Code="if ((bool)Settings[&quot;Rain Poppy&quot;]) FarmItemIDs.Add(72237);" />
	  <!-- Green Tea Leaf -->
	  <CustomAction Code="if ((bool)Settings[&quot;Green Tea Leaf&quot;]) FarmItemIDs.Add(72234);" />
	  <!-- Silkweed -->
	  <CustomAction Code="if ((bool)Settings[&quot;Silkweed&quot;]) FarmItemIDs.Add(72235);" />
	  <!-- Snow Lily -->
	  <CustomAction Code="if ((bool)Settings[&quot;Snow Lily&quot;]) FarmItemIDs.Add(79010);" />
	  <!-- Fool's Cap -->
	  <CustomAction Code="if ((bool)Settings[&quot;Fool's Cap&quot;]) FarmItemIDs.Add(79011);" />
	  <!-- Desecrated Herb -->
	  <CustomAction Code="if ((bool)Settings[&quot;Desecrated Herb&quot;]) FarmItemIDs.Add(89639);" />
	  <!-- Golden Lotus -->
	  <CustomAction Code="if ((bool)Settings[&quot;Golden Lotus&quot;]) FarmItemIDs.Add(72238);" />
	 <!--Dread Wastes-->
      <CustomAction Code="if ((bool)Settings[&quot;Dread Wastes&quot;]) FarmZoneIDs.Add(6138);" />
      <!--Krasarang Wilds-->
      <CustomAction Code="if ((bool)Settings[&quot;Krasarang Wilds&quot;]) FarmZoneIDs.Add(6134);" />
      <!--Kun-Lai Summit-->
      <CustomAction Code="if ((bool)Settings[&quot;Kun-Lai Summit&quot;]) FarmZoneIDs.Add(5841);" />
      <!--The Jade Forest-->
      <CustomAction Code="if ((bool)Settings[&quot;The Jade Forest&quot;]) FarmZoneIDs.Add(5785);" />
      <!--Townlong Steppes-->
      <CustomAction Code="if ((bool)Settings[&quot;Townlong Steppes&quot;]) FarmZoneIDs.Add(5842);" />
      <!--Vale of Eternal Blossoms-->
      <CustomAction Code="if ((bool)Settings[&quot;Vale of Eternal Blossoms&quot;]) FarmZoneIDs.Add(5840);" />
      <!--Valley of the Four Winds-->
      <CustomAction Code="if ((bool)Settings[&quot;Valley of the Four Winds&quot;]) FarmZoneIDs.Add(5805);" />
      <!--IF YOU ARE ADDING YOUR OWN ZONES DO NOT ADD THEM BELOW THIS LINE-->
      <CustomAction Code="FarmZoneIDs = FarmZoneIDs.OrderBy(z =&gt; z).ToList();" />
      <CustomAction Code="CharacterSettings.Instance.MailRecipient = (string)Settings[&quot;BankerName&quot;];" />
      <If Condition="FarmZoneIDs.Count == 0" IgnoreCanRun="True">
        <CustomAction Code="MyLog(&quot;Trying to be funny or something? How can you expect to farm anything with all zones disabled?&quot;);" />
        <CustomAction Code="TreeRoot.Stop();" />
      </If>
      <If Condition="FarmZoneIDs.Contains(Me.ZoneId) &amp;&amp; !(bool)Settings[&quot;SmartFarm&quot;]" IgnoreCanRun="True">
        <CustomAction Code="Settings[&quot;FarmedZone&quot;] = Me.ZoneId;" />
      </If>
      <If Condition="(Me.ZoneId != CityZoneID &amp;&amp; !FarmZoneIDs.Contains(Me.ZoneId))" IgnoreCanRun="True">
        <CustomAction Code="MyLog(&quot;Hearthing since bot isn't in capital or one of the farmed zones&quot;);" />
        <CallSubRoutine SubRoutineName="Hearth" />
      </If>
    </If>
  </SubRoutine>
  <SubRoutine SubRoutineName="Use Portal">
    <Declaration Code="uint currentZoneID;" />
    <CustomAction Code="currentZoneID = Me.ZoneId;" />
    <!--Dread Wastes-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 6138" IgnoreCanRun="True">
      <CustomAction Code="MyLog(&quot;Using Portal to Pandaria&quot;);" />
      <If Condition="Me.IsAlliance" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8231.457, 444.3759, 216.6882" />
        <FlyToAction Dismount="False" Location="-8195.537, 526.9921, 117.1019" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215457" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="1159.442, 47.04657, 771.2917" />
        <FlyToAction Dismount="False" Location="533.5371, 2299.58, 432.243" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
      <If Condition="Me.IsHorde" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2013.327, -4699.271, 28.61472" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215424" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="1159.442, 47.04657, 771.2917" />
        <FlyToAction Dismount="False" Location="533.5371, 2299.58, 432.243" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
    </If>
    <!--Krasarang Wilds-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 6134" IgnoreCanRun="True">
      <CustomAction Code="MyLog(&quot;Using Portal to Pandaria&quot;);" />
      <If Condition="Me.IsAlliance" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8231.457, 444.3759, 216.6882" />
        <FlyToAction Dismount="False" Location="-8195.537, 526.9921, 117.1019" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215457" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="-660.3162, -712.5911, 77.80901" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
      <If Condition="Me.IsHorde" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2013.327, -4699.271, 28.61472" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215424" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="-660.3162, -712.5911, 77.80901" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
    </If>
    <!--Kun-Lai Summit-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5841" IgnoreCanRun="True">
      <CustomAction Code="MyLog(&quot;Using Portal to Pandaria&quot;);" />
      <If Condition="Me.IsAlliance" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8231.457, 444.3759, 216.6882" />
        <FlyToAction Dismount="False" Location="-8195.537, 526.9921, 117.1019" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215457" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="2730.461, 528.8766, 569.1044" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
      <If Condition="Me.IsHorde" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2013.327, -4699.271, 28.61472" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215424" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="2730.461, 528.8766, 569.1044" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
    </If>
    <!--The Jade Forest-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5785" IgnoreCanRun="True">
      <CustomAction Code="MyLog(&quot;Using Portal to Pandaria&quot;);" />
      <If Condition="Me.IsAlliance" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8231.457, 444.3759, 216.6882" />
        <FlyToAction Dismount="False" Location="-8195.537, 526.9921, 117.1019" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215457" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
      <If Condition="Me.IsHorde" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2013.327, -4699.271, 28.61472" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215424" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
    </If>
    <!--Townlong Steppes-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5842" IgnoreCanRun="True">
      <CustomAction Code="MyLog(&quot;Using Portal to Pandaria&quot;);" />
      <If Condition="Me.IsAlliance" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8231.457, 444.3759, 216.6882" />
        <FlyToAction Dismount="False" Location="-8195.537, 526.9921, 117.1019" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215457" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="1766.536, 2377.078, 536.9471" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
      <If Condition="Me.IsHorde" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2013.327, -4699.271, 28.61472" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215424" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="1766.536, 2377.078, 536.9471" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
    </If>
    <!--Vale of Eternal Blossoms-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5840" IgnoreCanRun="True">
      <CustomAction Code="MyLog(&quot;Using Portal to Pandaria&quot;);" />
      <If Condition="Me.IsAlliance" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8231.457, 444.3759, 216.6882" />
        <FlyToAction Dismount="False" Location="-8195.537, 526.9921, 117.1019" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215457" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="1159.442, 47.04657, 771.2917" />
        <FlyToAction Dismount="False" Location="1152.385, 306.1528, 620.63" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
      <If Condition="Me.IsHorde" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2013.327, -4699.271, 28.61472" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215424" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="1159.442, 47.04657, 771.2917" />
        <FlyToAction Dismount="False" Location="1152.385, 306.1528, 620.63" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
    </If>
    <!--Valley of the Four Winds-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5805" IgnoreCanRun="True">
      <CustomAction Code="MyLog(&quot;Using Portal to Pandaria&quot;);" />
      <If Condition="Me.IsAlliance" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8231.457, 444.3759, 216.6882" />
        <FlyToAction Dismount="False" Location="-8195.537, 526.9921, 117.1019" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215457" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="511.1522, -746.5512, 268.1245" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
      <If Condition="Me.IsHorde" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2013.327, -4699.271, 28.61472" />
        <WaitAction Condition="ObjectManager.GetObjectsOfType&lt;WoWGameObject&gt;().Any(o =&gt; o.Entry == 207692);" Timeout="10000" />
        <InteractionAction InteractType="GameObject" Entry="215424" InteractDelay="2000" GameObjectType="Transport" SpellFocus="Anvil" />
        <WaitAction Condition="false" Timeout="6000" />
        <ChangeBotAction BotName="Combat Bot" />
        <FlyToAction Dismount="False" Location="511.1522, -746.5512, 268.1245" />
        <ChangeBotAction BotName="Gatherbuddy2" />
        <WaitAction Condition="false" Timeout="6000" />
        <CallSubRoutine SubRoutineName="LoadProfile" />
      </If>
    </If>
    <!--Wait until zone changes.-->
    <WaitAction Condition="Me.ZoneId != currentZoneID" Timeout="20000" />
  </SubRoutine>
  <SubRoutine SubRoutineName="LoadProfile">
    <!--Dread Wastes-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 6138" IgnoreCanRun="True">
      <CustomAction Code="LoadProfileFromSubfolder(&quot;Dread Wastes&quot;);" />
    </If>
    <!--Krasarang Wilds-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 6134" IgnoreCanRun="True">
      <CustomAction Code="LoadProfileFromSubfolder(&quot;Krasarang Wilds&quot;);" />
    </If>
    <!--Kun-Lai Summit-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5841" IgnoreCanRun="True">
      <CustomAction Code="LoadProfileFromSubfolder(&quot;Kun-Lai Summit&quot;);" />
    </If>
    <!--The Jade Forest-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5785" IgnoreCanRun="True">
      <CustomAction Code="LoadProfileFromSubfolder(&quot;The Jade Forest&quot;);" />
    </If>
    <!--Townlong Steppes-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5842" IgnoreCanRun="True">
      <CustomAction Code="LoadProfileFromSubfolder(&quot;Townlong Steppes&quot;);" />
    </If>
    <!--Vale of Eternal Blossoms-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5840" IgnoreCanRun="True">
      <CustomAction Code="LoadProfileFromSubfolder(&quot;Vale of Eternal Blossoms&quot;);" />
    </If>
    <!--Valley of the Four Winds-->
    <If Condition="(uint)Settings[&quot;FarmedZone&quot;] == 5805" IgnoreCanRun="True">
      <CustomAction Code="LoadProfileFromSubfolder(&quot;Valley of the Four Winds&quot;);" />
    </If>
  </SubRoutine>
  <SubRoutine SubRoutineName="Repair">
    <CustomAction Code="MyLog(&quot;Repairing&quot;);" />
    <If Condition="Me.IsAlliance" IgnoreCanRun="True">
      <If Condition="SpellManager.HasSpell(&quot;Flight Master's License&quot;)" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="-8430.486, 623.2193, 95.50689" />
      </If>
      <MoveToAction Location="-8430.486, 623.2193, 95.50689" MoveType="Location" Pathing="Navigator" Entry="0" />
      <While Condition="MerchantFrame.Instance != null &amp;&amp; !MerchantFrame.Instance.IsVisible" IgnoreCanRun="True">
        <InteractionAction InteractType="NPC" Entry="5512" InteractDelay="2000" GameObjectType="Mailbox" SpellFocus="Anvil" />
      </While>
    </If>
    <If Condition="Me.IsHorde" IgnoreCanRun="True">
      <If Condition="SpellManager.HasSpell(&quot;Flight Master's License&quot;)" IgnoreCanRun="True">
        <FlyToAction Dismount="False" Location="1971.228, -4699.085, 50.88165" />
        <FlyToAction Dismount="False" Location="2043.956, -4828.79, 27.58743" />
      </If>
      <While Condition="MerchantFrame.Instance != null &amp;&amp; !MerchantFrame.Instance.IsVisible" IgnoreCanRun="True">
        <InteractionAction InteractType="NPC" Entry="3361" InteractDelay="2000" GameObjectType="Mailbox" SpellFocus="Anvil" />
      </While>
    </If>
    <WaitAction Condition="false" Timeout="8000" />
    <CustomAction Code="Lua.DoString(&quot;RepairAllItems()&quot;);" />
    <SellItemAction Sell="All" NpcEntry="0" Location="0, 0, 0" SellItemType="Greys" ItemID="0" Count="0" />
    <SellItemAction Sell="All" NpcEntry="0" Location="0, 0, 0" SellItemType="Specific" ItemID="63122" Count="0" />
  </SubRoutine>
  <Declaration Code="void MyLog(string format,params object[] args)&#xD;&#xA;        {&#xD;&#xA;            Log(Colors.Green,&quot;Multiprofile: &quot;,Colors.LightGreen,format,args);&#xD;&#xA;        }&#xD;&#xA;" />
  <Declaration Code="void SmLog(string format,params object[] args)&#xD;&#xA;        {&#xD;&#xA;            Log(Colors.Yellow,&quot;SmartFarm: &quot;,Colors.LightYellow,format,args);&#xD;&#xA;        }&#xD;&#xA;" />
  <Declaration Code="void Err(string format,params object[] args)&#xD;&#xA;        {&#xD;&#xA;            Log(Colors.Green,&quot;Multiprofile: &quot;,Colors.Red,format,args);&#xD;&#xA;        }&#xD;&#xA;" />
  <Declaration Code="uint TotalItemsInBag()&#xD;&#xA;        {&#xD;&#xA;            uint cnt=0;&#xD;&#xA;            foreach (var item in Me.BagItems)&#xD;&#xA;                 cnt += item.StackCount;&#xD;&#xA;            return cnt;&#xD;&#xA;        }&#xD;&#xA;" />
  <Declaration Code="        void LoadProfileFromSubfolder(string folder)&#xD;&#xA;        {&#xD;&#xA;            string path = (string)Settings[&quot;ProfileFolderPath&quot;];&#xD;&#xA;            bool isAbsolute = System.IO.Path.IsPathRooted(path);&#xD;&#xA;            if (!isAbsolute)&#xD;&#xA;                path = System.IO.Path.Combine(Utilities.AssemblyDirectory, path);&#xD;&#xA;            path = System.IO.Path.Combine(path, folder);&#xD;&#xA;            path = System.IO.Path.Combine(path, Me.IsHorde ? &quot;Horde&quot; : &quot;Alliance&quot;);&#xD;&#xA;            if (System.IO.Directory.Exists(path))&#xD;&#xA;            {&#xD;&#xA;                string[] files = System.IO.Directory.GetFiles(path, &quot;*.xml&quot;, System.IO.SearchOption.TopDirectoryOnly);&#xD;&#xA;                if (files != null &amp;&amp; files.Length &gt; 0)&#xD;&#xA;                {&#xD;&#xA;                    int index = new Random().Next(0, files.Length);&#xD;&#xA;                    ProfileManager.LoadNew(files[index]);&#xD;&#xA;                    MyLog(&quot;Loading profile for zone: {0}&quot;, folder);&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                    Err(&quot;no profiles found in path: {0}&quot;, path);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;                MyLog(&quot;ProfilePath: {0} not found&quot;, path);&#xD;&#xA;        }" />
</Professionbuddy>